--4. Definirea tabelelor

create table utilizatori (
  id_utilizator int not null Primary Key,
  username varchar2(20),
  parola varchar2(20),
  email varchar2(50),
  nr_telefon varchar2(15)
);

create table tari (
  id_tara int not null Primary Key,
  denumire varchar2(50),
  regiune varchar2(50),
  climat varchar2(50)
);

create table orase (
  id_oras number(5) not null Primary Key,
  id_tara int,
  nume varchar2(50),
  descriere varchar2(255),
  foreign key (id_tara) references tari(id_tara)
);


create table calatorii (
  id_calatorie int not null Primary Key,
  id_utilizator int,
  id_oras number(5),
  id_mijloc number(6),
  data_plecare date,
  data_intoarcere date,
  foreign key (id_utilizator) references utilizatori(id_utilizator),
  foreign key (id_oras) references orase(id_oras),
  foreign key (id_mijloc) references mijloace_transport(id_mijloc)
);

create table mijloace_transport (
  id_mijloc number(6) not null Primary Key,
  denumire varchar2(50),
  tip varchar2(50),
  firma varchar2(50),
  pret number(5,2)
);

alter table mijloace_transport
add categorie varchar2(50);


create table atractii (
  id_atractie int not null Primary Key,
  id_oras number(5),
  denumire varchar(50),
  descriere varchar(255),
  categorie varchar(50),
  foreign key (id_oras) references orase(id_oras)
);

create table recenzii_atractie (
  id_recenzie int not null Primary Key,
  id_user int,
  id_atractie int,
  detalii varchar2(255),
  nr_stele number(1) not null check (nr_stele >= 1 and nr_stele <= 5),
  foreign key (id_user) references utilizatori(id_utilizator),
  foreign key (id_atractie) references atractii(id_atractie)
);

create table cazari (
  id_cazare int not null Primary Key,
  id_oras number(5),
  tip_cazare varchar2(50),
  adresa varchar2(255),
  foreign key (id_oras) references orase(id_oras)
);

--tabela asociativa

create table util_viziteaza_atractii (
  id_vizita int not null Primary Key,
  id_utilizator int,
  id_atractie int,
  data_vizita date,
  foreign key (id_utilizator) references utilizatori(id_utilizator),
  foreign key (id_atractie) references atractii(id_atractie)
);


--5. Inregistrari in tabele

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (1, 'anapopescu123', 'parolaAna', 'ana.popescu@example.com', '0712345678');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (2, 'mihaiionescu456', 'parolaMihai', 'mihai.ionescu@example.com', '0723456789');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (3, 'elenaradu789', 'parolaElena', 'elena.radu@example.com', '0734567890');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (4, 'alexandradumitru101', 'parolaAlex', 'alexandra.dumitru@example.com', '0745678901');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (5, 'andreigheorghe202', 'parolaAndrei', 'andrei.gheorghe@example.com', '0756789012');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (6, 'cristinastoica303', 'parolaCristina', 'cristina.stoica@example.com', '0767890123');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (7, 'ionconstantin404', 'parolaIon', 'ion.constantin@example.com', '0778901234');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (8, 'ralucaflorescu505', 'parolaRaluca', 'raluca.florescu@example.com', '0789012345');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (9, 'gabrielmoldovan606', 'parolaGabriel', 'gabriel.moldovan@example.com', '0790123456');

insert into utilizatori (id_utilizator, username, parola, email, nr_telefon)
values (10, 'dianamarin707', 'parolaDiana', 'diana.marin@example.com', '0701234507');

insert into utilizatori
values (11, 'elenaradu789', 'parolaparola', 'elena1989@yahoo.com', '0725472817');

select * from utilizatori;

insert into tari (id_tara, denumire, regiune, climat)
values (11, 'Romania', 'Europa', 'temperat');

insert into tari (id_tara, denumire, regiune, climat)
values (21, 'Franta', 'Europa', 'temperat');

insert into tari (id_tara, denumire, regiune, climat)
values (31, 'Olanda', 'Europa', 'maritim temperat');

insert into tari (id_tara, denumire, regiune, climat)
values (41, 'Iordania', 'Asia', 'subtropical');

insert into tari (id_tara, denumire, regiune, climat)
values (51, 'Brazilia', 'America de Sud', 'tropical');

insert into tari (id_tara, denumire, regiune, climat)
values (61, 'Marea Britanie', 'Europa', 'oceanic');

insert into tari (id_tara, denumire, regiune, climat)
values (71, 'Australia', 'Oceania', 'temperat');

insert into tari (id_tara, denumire, regiune, climat)
values (81, 'Italia', 'Europa', 'mediteranean');

insert into tari (id_tara, denumire, regiune, climat)
values (91, 'India', 'Asia', 'tropical');

insert into tari (id_tara, denumire, regiune, climat)
values (101, 'Finlanda', 'Europa', 'subpolar');


select * from tari;

insert into orase (id_oras, id_tara, nume, descriere)
values (100, 11, 'Bucuresti', 'Capitala Romaniei');

insert into orase (id_oras, id_tara, nume, descriere)
values (200, 21, 'Paris', 'Capitala Frantei');

insert into orase (id_oras, id_tara, nume, descriere)
values (300, 31, 'Amsterdam', 'Capitala Olandei');

insert into orase (id_oras, id_tara, nume, descriere)
values (400, 41, 'Amman', 'Capitala Iordaniei');

insert into orase (id_oras, id_tara, nume, descriere)
values (500, 51, 'Brasilia', 'Capitala Braziliei');

insert into orase (id_oras, id_tara, nume, descriere)
values (600, 61, 'Londra', 'Capitala Marii Britanii');

insert into orase (id_oras, id_tara, nume, descriere)
values (800, 81, 'Roma', 'Capitala Italiei');

insert into orase (id_oras, id_tara, nume, descriere)
values (900, 91, 'Mumbai', 'Cel mai populat oras din India');

insert into orase (id_oras, id_tara, nume, descriere)
values (1000, 101, 'Helsinki', 'Capitala Finlandei');

insert into orase (id_oras, id_tara, nume, descriere)
values (401, 41, 'Petra', null);

insert into orase (id_oras, id_tara, nume, descriere)
values (601, 61, 'Oxford', null);

insert into orase (id_oras, id_tara, nume, descriere)
values (602, 61, 'Birmingham', 'Cea mai mare celebrare a Sf Patrick din Anglia');

insert into orase (id_oras, id_tara, nume, descriere)
values (101, 11, 'Ploiesti', null);

insert into orase (id_oras, id_tara, nume, descriere)
values (102, 11, 'Brasov', null);

insert into orase (id_oras, id_tara, nume, descriere)
values (103, 11, 'Constanta', null);

select * from orase;

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1001, 100, 'Palatul Parlamentului', 'Cel mai mare palat administrativ pentru utilizare civila', 'Arhitectura');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1002, 200, 'Turnul Eiffel', 'Cunoscutul turn de fier din inima Parisului', 'Monument');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1003, 300, 'Muzeul Van Gogh', 'Gazda pentru cele mai multe lucrari ale artistului Van Gogh', 'Muzeu');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1004, 400, 'Petra', 'Oras antic Petra din Iordania', 'Sit istoric');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1005, 100, 'Muzeul Satului', null, 'Muzeu');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1006, 600, 'Muzeul Britanic', 'Una dintre cele mai mari colectii de arta si artefacte din lume', 'Muzeu');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1007, 800, 'Coloseum', 'Amfiteatru roman antic din centrul Romei', 'Arheologie');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1008, 600, 'Palatul Buckingham', 'Resedinta principala din Londra a monarhilor britanici', 'Reper cultural');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1009, 400, 'Cetatea Ammanului', 'Este considerat? printre cele mai vechi locuri locuite Ã®n continuu din lume', 'Sit istoric');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1010, 401, 'Al-Khazneh', 'Faimosul monument al Petra sculptat in stanca', 'Monument');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1011, 601, 'Universitatea Oxford', 'Una dintre cele mai prestigioase universitati din lume', 'Educatie');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1012, 602, 'Birmingham St. Patricks Day Parade', 'Parada anuala in cinstea Sf. Patrick', 'Eveniment cultural');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1013, 101, 'Muzeul Ceasului', 'Expozitie dedicata evolutiei timpului', 'Muzeu');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1014, 102, 'Castelul Bran', 'Cunoscut si sub numele de Castelul lui Dracula', 'Cetate');

insert into atractii (id_atractie, id_oras, denumire, descriere, categorie)
values (1015, 103, 'Plaja Mamaia', 'Statiune de la malul marii in Constanta', 'Recreere');

select * from atractii;

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100001, 'Tren CFR Express', 'CFR', 50.00, 'tren');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100002, 'IR 1656', 'Regio', 30.00, 'tren');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100003, 'AirJet A320', 'AirJet', 200.00, 'avion');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100004, 'FlySky 737', 'FlySky', 180.00, 'avion');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100005, 'Express Train 2000', 'CFR', 60.00, 'tren');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100006, 'Regional Express', 'Regio', 35.00, 'tren');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100007, 'Swift Transporter', 'CFR', 55.00, 'tren');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100008, 'MetroExpress', 'Regio', 40.00, 'tren');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100009, 'High-Speed Voyager', 'CFR', 75.00, 'tren');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100010, 'SkyBlitz 747', 'SkyBlitz', 250.00, 'avion');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100011, 'JetStream 3000', 'JetStream', 220.00, 'avion');

insert into mijloace_transport (id_mijloc, denumire, firma, pret,categorie)
values (100012, 'FlySky 999', 'FlySky', 300.00, 'avion');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100013, 'FlySky 738', 'FlySky', 180.00, 'avion');

insert into mijloace_transport (id_mijloc, denumire, firma, pret, categorie)
values (100014, 'UltraJet X10', 'UltraJet', 280.00, 'avion');

select * from mijloace_transport;


insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (61, 1, 101, 100001, to_date('2024-01-15', 'YYYY-MM-DD'), to_date('2024-01-20', 'YYYY-MM-DD'));

insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (62, 2, 200, 100005, to_date('2023-02-10', 'YYYY-MM-DD'), to_date('2023-02-15', 'YYYY-MM-DD'));

insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (63, 3, 300, 100009, to_date('2024-03-05', 'YYYY-MM-DD'), to_date('2024-03-10', 'YYYY-MM-DD'));

insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (64, 4, 401, 100012, to_date('2024-04-20', 'YYYY-MM-DD'), to_date('2024-04-25', 'YYYY-MM-DD'));

insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (65, 5, 500, 100014, to_date('2023-05-15', 'YYYY-MM-DD'), to_date('2023-05-20', 'YYYY-MM-DD'));

insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (66, 1, 101, 100002, to_date('2024-06-10', 'YYYY-MM-DD'), to_date('2024-06-15', 'YYYY-MM-DD'));

insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (67, 2, 200, 100010, to_date('2024-07-05', 'YYYY-MM-DD'), to_date('2024-07-10', 'YYYY-MM-DD'));

insert into calatorii (id_calatorie, id_utilizator, id_oras, id_mijloc, data_plecare, data_intoarcere)
values (68, 1, 601, 100010, to_date('2022-01-15', 'YYYY-MM-DD'), to_date('2022-02-19', 'YYYY-MM-DD'));

select * from calatorii;

insert into cazari (id_cazare, id_oras, tip_cazare, adresa)
values (999, 101, 'Hotel', 'Strada Lautari, Nr. 38');

insert into cazari (id_cazare, id_oras, tip_cazare, adresa)
values (998, 200, 'Airbnb', 'Rue de Rivoli, Nr. 2');

insert into cazari (id_cazare, id_oras, tip_cazare, adresa)
values (997, 300, 'Hotel', 'Spadinalaan 97');

insert into cazari (id_cazare, id_oras, tip_cazare, adresa)
values (996, 800, 'Hotel', 'Via le Marco Polo 102');

insert into cazari (id_cazare, id_oras, tip_cazare, adresa)
values (995, 600, 'Vila', 'Bishop St. 70');

insert into cazari (id_cazare, id_oras, tip_cazare, adresa)
values (994, 100, 'Airbnb', 'Bd. Dacia, Nr. 6');

insert into cazari (id_cazare, id_oras, tip_cazare, adresa)
values (992, 600, 'Airbnb', 'Melbury Rd. 8');

select * from cazari;

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (51, 1, 1001, 'Prea mare, istoric neplacut, boring', 1);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (52, 2, 1002, 'A fost o experienta placuta, dar nu cum ma asteptam din cauza aglomeratiei.', 4);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (53, 3, 1003, 'Super distractiv! Am invatat asa multe, recomand tuturor!', 5);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (54, 4, 1004, 'Locatie de vis! Apartine patrimoniului UNESCO, as reveni.', 5);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (55, 5, 1005, 'Nu a fost rau, dar nici extraordinar.', 3);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (56, 1, 1015, 'Un loc minunat pentru relaxare, dar foarte scump', 3);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (57, 2, 1012, 'M-am distrat de minune', 5);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (58, 9, 1014, 'Experienta unica! Dar nu pentru copii', 5);

insert into recenzii_atractie (id_recenzie, id_user, id_atractie, detalii, nr_stele)
values (59, 7, 1002, 'Nu recomand.', 1);

select * from recenzii_atractie;

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (1, 1, 1001, to_date('2023-01-15', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (2, 2, 1002, to_date('2023-02-10', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (3, 3, 1003, to_date('2023-03-05', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (4, 4, 1004, to_date('2023-04-20', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (5, 5, 1005, to_date('2023-05-15', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (6, 10, 1006, to_date('2023-06-10', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (7, 9, 1007, to_date('2023-07-05', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (8, 7, 1001, to_date('2023-08-20', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (9, 6, 1002, to_date('2023-09-15', 'YYYY-MM-DD'));

insert into util_viziteaza_atractii (id_vizita, id_utilizator, id_atractie, data_vizita)
values (10, 5, 1003, to_date('2024-01-01', 'YYYY-MM-DD'));

select * from util_viziteaza_atractii;


SET SERVEROUTPUT ON;

--ex6
--subprogram stocat independent care s? utilizeze toate cele 3 tipuri de colec?ii studiate. 
-- Realizati un subprogram care pentru o tara data afiseaza: descrierile oraselor ce apartin tarii,
--id-urile oraselor din acea tara, si id-urile cazarilor care se pot gasi in orasele din acea tara


CREATE OR REPLACE PROCEDURE ex6(v_nume_tara IN VARCHAR2) AS
    
    TYPE index_by_table_type IS TABLE OF VARCHAR2(50) INDEX BY VARCHAR2(50);
    v_index_by index_by_table_type;

    TYPE nested_table_type IS TABLE OF NUMBER(5)INDEX BY PLS_INTEGER;
    v_nested nested_table_type;

    TYPE varray_type IS VARRAY(10) OF NUMBER(5);
    v_varray varray_type:= varray_type();

    v_id_tara NUMBER(5);
    
BEGIN
    SELECT id_tara INTO v_id_tara FROM tari WHERE denumire = v_nume_tara;

    IF v_id_tara IS NOT NULL THEN
        
        FOR o IN (SELECT UNIQUE id_oras FROM orase WHERE id_tara = v_id_tara) LOOP
            v_nested(v_nested.COUNT + 1) := o.id_oras;
            END LOOP;
            
        FOR caz IN (SELECT id_cazare, id_oras FROM cazari) LOOP
            FOR i IN 1..v_nested.COUNT LOOP
                IF caz.id_oras = v_nested(i) THEN
                    v_varray.EXTEND;
                    v_varray(v_varray.LAST) := caz.id_cazare;
                END IF;
        END LOOP;
        END LOOP;

            
        FOR inregistrare IN (SELECT t.denumire, t.climat, o.descriere
                           FROM orase o
                           JOIN tari t ON o.id_tara = t.id_tara
                           WHERE t.id_tara = v_id_tara)
        LOOP
        
            v_index_by(inregistrare.denumire) := inregistrare.descriere;
            DBMS_OUTPUT.PUT_LINE('Descriere: ' || v_index_by(v_nume_tara));
            
        END LOOP;
        
        
        FOR i IN v_nested.FIRST..v_nested.LAST
        LOOP
            DBMS_OUTPUT.PUT_LINE('ID Oras: ' ||v_nested(i));
        END LOOP;

        FOR i IN v_varray.FIRST..v_varray.LAST
        LOOP
            DBMS_OUTPUT.PUT_LINE('ID Cazare: ' || v_varray(i));
        END LOOP;
    ELSE
        DBMS_OUTPUT.PUT_LINE('Nu exist? ?ar? cu numele ' || v_nume_tara);
    END IF;
END ex6;
/

BEGIN
    ex6('Marea Britanie'); 
END;
/


--ex7 
--subprogram stocat independent care s? utilizeze 2 tipuri diferite de cursoare studiate,
--unul dintre acestea fiind cursor parametrizat, dependent de celalalt cursor

--Dat fiind id-ul unui utilizator, sa se retina intr-un cursor detaliile de calatorie ale acestuia,
--apoi sa se afiseze climatele tarilor in care se afla orasele in care acest user a calatorit.

CREATE OR REPLACE PROCEDURE ex7(e_id_utilizator IN NUMBER) IS
    CURSOR cursor_calatorii IS
        SELECT c.id_calatorie, o.nume AS nume_oras, t.id_tara, t.climat
        FROM calatorii c
        JOIN orase o ON c.id_oras = o.id_oras
        JOIN tari t ON o.id_tara = t.id_tara
        WHERE c.id_utilizator = e_id_utilizator;
        
    --cursor parametrizat dependent de cursor_calatorie:
    CURSOR cursor_climat (e_id_tara tari.id_tara%TYPE) IS
        SELECT climat
        FROM tari
        WHERE id_tara = e_id_tara;

    v_cal_id calatorii.id_calatorie%TYPE;
    v_nume_oras orase.nume%TYPE;
    v_id_tara tari.id_tara%TYPE;
    v_climat tari.climat%TYPE;

BEGIN
    
    OPEN cursor_calatorii;

    LOOP
        FETCH cursor_calatorii INTO v_cal_id, v_nume_oras, v_id_tara, v_climat;
        EXIT WHEN cursor_calatorii%NOTFOUND;
        
        FOR val in cursor_climat(v_id_tara) LOOP
            DBMS_OUTPUT.PUT_LINE(v_climat);
        END LOOP;

    END LOOP;

    CLOSE cursor_calatorii;
END ex7;
/

BEGIN
    ex7(1); 
END;
/


--ex8
-- subprogram de tip functie - 3 tabele
-- afiseaza suma stelelor din recenzii doar daca atractia a fost vizitata


CREATE OR REPLACE FUNCTION ex8(v_username utilizatori.username%type)
    RETURN NUMBER IS rezultat NUMBER(2) := 0 ;
    contor NUMBER;
    exceptie1 exception;
    PRAGMA EXCEPTION_INIT(exceptie1, -20001);
    exceptie2 exception;
    PRAGMA EXCEPTION_INIT(exceptie2, -20002); 
    BEGIN
        SELECT COUNT(*)
        INTO contor
        FROM utilizatori
        WHERE username = v_username;
        
        IF contor = 0 THEN 
            raise exceptie1;
        ELSIF contor>1 THEN
            raise exceptie2;
        END IF;
        
        SELECT COUNT(r.nr_stele)
        INTO rezultat
        FROM utilizatori u
        JOIN recenzii_atractie r ON r.id_user = u.id_utilizator
        JOIN util_viziteaza_atractii a ON a.id_atractie = r.id_atractie 
        AND u.username = v_username;
         
        RETURN rezultat;
        
    EXCEPTION
        when exceptie1 then
            DBMS_OUTPUT.PUT_LINE('Nu exista utilizatori cu numele dat');
            return rezultat;
        when exceptie2 then
            DBMS_OUTPUT.PUT_LINE('Exista mai multi utilizatori cu numele dat');
             return rezultat;
        
    END ex8;
    /
    
BEGIN
    DBMS_OUTPUT.PUT_LINE(ex8('elena'));
END;
/

--ex9
--Fiind dat username-ul unui utilizator, sa se afiseze daca a calatorit undeva
--numele orasului, climatul tarii in care se afla orasul respectiv si categoria
--mijlocului de transport cu care s-a deplasat. Tratati cazurile in care
--exista mai multi utilizatori cu acelasi nume sau utilizatorul nu are
--nicio calatorie inregistrata.

CREATE OR REPLACE PROCEDURE ex9(e_username IN utilizatori.username%TYPE) IS
    v_id_utilizator utilizatori.id_utilizator%TYPE;
    v_id_oras orase.id_oras%TYPE;
    v_denumire_tara tari.denumire%TYPE;
    v_climat_tara tari.climat%TYPE;
    v_nume_oras orase.nume%TYPE;
    v_tip_transport mijloace_transport.denumire%TYPE;
    v_id_mijloc mijloace_transport.id_mijloc%TYPE;

    CURSOR calatorii_cursor IS
        SELECT u.id_utilizator, c.id_oras, o.nume, t.denumire, t.climat, m.id_mijloc
        FROM utilizatori u
        JOIN calatorii c ON u.id_utilizator = c.id_utilizator
        JOIN orase o ON c.id_oras = o.id_oras
        JOIN tari t ON o.id_tara = t.id_tara
        JOIN mijloace_transport m ON m.id_mijloc = c.id_mijloc
        WHERE u.username = e_username;

BEGIN
    BEGIN
    
        SELECT id_utilizator INTO v_id_utilizator
        FROM utilizatori
        WHERE username = e_username;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20000, 'Nu exista utilizatori cu numele dat');
        
        WHEN TOO_MANY_ROWS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Exista mai multi utilizatori cu numele dat');
            
    END;
    --daca exista
    IF v_id_utilizator IS NOT NULL THEN
        DBMS_OUTPUT.PUT_LINE('Utilizatorul ' || e_username || ' a calatorit in:');

        FOR calatorie IN calatorii_cursor LOOP
            v_id_oras := calatorie.id_oras;
            v_nume_oras := calatorie.nume;
            v_denumire_tara := calatorie.denumire;
            v_climat_tara := calatorie.climat;
            v_id_mijloc := calatorie.id_mijloc;

            -- tipul mijlocului de transport
            BEGIN
                SELECT denumire INTO v_tip_transport
                FROM mijloace_transport
                WHERE id_mijloc = v_id_mijloc;
            END;

            DBMS_OUTPUT.PUT_LINE('Oras: ' || v_nume_oras);
            DBMS_OUTPUT.PUT_LINE('Tara: ' || v_denumire_tara);
            DBMS_OUTPUT.PUT_LINE('Climat: ' || v_climat_tara);
            DBMS_OUTPUT.PUT_LINE('Mijloc Transport: ' || v_tip_transport);
            DBMS_OUTPUT.PUT_LINE('-----');
            END LOOP;
    END IF;
END ex9;
/

BEGIN
    ex9('anapopescu123'); 
END;
/


--ex10
-- un trigger de tip LMD la nivel de comand?
--triggerul interzice stergea oraselor

create or replace trigger ex10
    before delete on orase
begin
    RAISE_APPLICATION_ERROR(-20001, 'Este interzisa stergerea datelor din tabelul ORASE');
end;
/

--delete from orase
--WHERE id_oras = '101';

--select * from orase;

--ex11
--un trigger de tip LMD la nivel de linie
--Trigger-ul interzice cresterea pretului unui mijloc de transport cu mai mult de 50%

create or replace trigger ex11
    before update on mijloace_transport
    for each row
begin
    if (:new.pret - :old.pret > :old.pret*(1/2)) then
        raise_application_error(-20001, 'Pretul nu poate fi crescut cu mai mult de 50%');
    end if;
end;
/

update mijloace_transport
set pret = pret + 90
where id_mijloc = 100009;


--ex12
-- un trigger de tip LDD
-- un trigger care se declanseaza de fiecare data la executia unei operatii LDD
-- si salveaza modificarile in tabela modificari

create table modificari(
    utilizator varchar2(30),
    obiect_modificat varchar2(50),
    activitate varchar2(50));

create or replace trigger ex12
    after create or drop or alter on schema

BEGIN
    insert into modificari
    values(SYS.LOGIN_USER, SYS.DICTIONARY_OBJ_NAME, SYS.DICTIONARY_OBJ_TYPE);

END;
/

create table cazari_e as select * from cazari;

alter table cazari_e
drop column adresa;

drop table cazari_e;

select * from modificari;




